import java.util.ArrayList;
import java.util.Collections;
import java.util.Stack;

@SuppressWarnings("rawtypes")
class Info implements Comparable{
	int val;
	char type;
	Info(int x, char ch){
		val = x;
		type = ch;
	}
	@Override
	public int compareTo(Object arg0) {
		// TODO Auto-generated method stub
		return val - ((Info)arg0).val;
	}
	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return Integer.toString(val)+" " + type;
	}
	
	
}

public class CareerCup {
	public ArrayList<Integer> MergeRangeArray(int[] arr1, int[] arr2){
		ArrayList<Integer> list = new ArrayList<Integer>();
		ArrayList<Info> arrInfo = new ArrayList<Info>();
		Stack<Info> stack = new Stack<Info>();
		for( int i = 0 ; i < arr1.length - 1;i+=2){
			Info tempstart = new Info(arr1[i],'S');
			Info tempEnd = new Info(arr1[i+1],'E');
			arrInfo.add(tempstart);
			arrInfo.add(tempEnd);
			//System.out.println(tempstart + " " + tempEnd);
		}
		for( int i = 0 ; i < arr2.length - 1;i+=2){
			Info tempstart = new Info(arr2[i],'S');
			Info tempEnd = new Info(arr2[i+1],'E');
			arrInfo.add(tempstart);
			arrInfo.add(tempEnd);
		}
		Collections.sort(arrInfo);
		//System.out.println(arrInfo.toString());
		for( int i = 0 ; i < arrInfo.size();i++){
			if( arrInfo.get(i).type == 'S'){
				stack.push(arrInfo.get(i));
			}
			else{
				Info temp = stack.pop();
				if( stack.isEmpty()){
					list.add(temp.val);
					list.add(arrInfo.get(i).val);
				}
			}
		}
		return list;
	}
}

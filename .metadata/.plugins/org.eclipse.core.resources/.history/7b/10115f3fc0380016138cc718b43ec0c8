package linkedlist;

public class SingleLinkedList implements LinkedList {
	Node head;
	Node lastNode;
	public SingleLinkedList(Node head){
		this.head = head;
		lastNode = head;
	}
	@Override
	public void Traverse() {
		Node temp = head;
		System.out.print("[");
		while( temp != null ){
			System.out.print(temp.val );
			temp = temp.next;
			if( temp != null ){
				System.out.print(" ");
			}
		}
		System.out.print("]");
	}

	

	@Override
	public void Remove(int key) {
		Node temp = head;
		Node prev;
		while(temp != null ){
			if( temp.val == key ){
				prev.next = temp.next;
			}
			prev = temp;
			temp = temp.next;
		}
	}

	@Override
	public boolean Search(int key) {
		// TODO Auto-generated method stub
		return false;
	}
	@Override
	public void InsertLast(Node newNode) {
		lastNode.next = newNode;
		lastNode = newNode;
	}
	@Override
	public void InsertFirst(Node newNode) {
		newNode.next = head;
		head = newNode;
	}
	@Override
	public void InsertPosition(Node newNode, int Pos) {
		Node temp = head;
		int count = 1 ; 
		while( count < Pos){
			temp = temp.next;
			count++;
		}
		newNode.next = temp.next;
		temp.next = newNode;
	}

}
